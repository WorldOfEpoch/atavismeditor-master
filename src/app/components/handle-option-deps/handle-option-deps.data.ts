import {UsageType} from '../handle-dependencies/handle-dependencies.data';
import {
  abilitiesTable,
  behaviorConditionsTable,
  buildObjectLimitsTable,
  buildObjectStageTable,
  buildObjectTable,
  characterTemplateTable,
  claimTable,
  craftingRecipesTable,
  currenciesTable,
  dialogueActionsRequirementsTable,
  dialogueActionsTable,
  effectsTable,
  effectsTriggersTable,
  itemRequirementTable,
  itemTemplatesTable,
  mobAbilityConditionsTable,
  mobTemplateTable,
  questRequirementTable,
  resourceNodeSubProfileTable,
  skillsTable,
  slotsTable,
  statsTable,
  statThresholdTable,
} from '../../entry/tables.data';
import {DataBaseType} from '../../settings/profiles/profile';
import {TabTypes} from '../../models/tabTypes.enum';
import {DynamicDropdownFieldConfig} from '../../models/configRow.interface';
import {FormFieldConfig} from '../../models/configs';
import {
  armorTypeFieldConfig,
  buildObjectCategoryFieldConfig,
  claimObjectInteractionTypeFieldConfig,
  claimTypeFieldConfig,
  classFieldConfig,
  itemQualityFieldConfig,
  itemSlotTypeFieldConfig,
  itemTypeFieldConfig,
  mobTagsFieldConfig,
  mobTypeFieldConfig,
  speciesFieldConfig,
  stateFieldConfig,
  statShiftActionFieldConfig,
  toolTypeFieldConfig,
  weaponTypeFieldConfig,
} from '../../entry/dropdown.config';
import {Requirements} from '../../entry/option-choices/option-choices.data';
import {EffectType} from '../../entry/effects/effects.data';
import {eventType} from '../../entry/effects-triggers/effects-triggers.data';

export const sensitiveOption: string[] = [
  'Dialogue Action',
  'Sockets Type',
  'Item Type',
  'Armor Type',
  'Species',
  'Weapon Type',
  'Tool Type',
  'Crafting Station',
  'Claim Object Interaction Type',
  'Claim Object Category',
  'Stat Functions',
  'State',
  'Stat Shift Action',
  'Item Slot Type',
];

export interface UsageOptionModel {
  module: TabTypes;
  section: string;
  usageType: UsageType;
  dbType?: DataBaseType;
  table: string;
  field: string;
  choiceAsId: boolean;
  choiceIdAsI?: boolean;
  count?: number;
  defaultValue?: string;
  options?: string[];
  value?: string | number;
  label?: string;
  optionName?: string;
  multiple?: boolean;
  formField?: FormFieldConfig;

  numberAsId?: boolean;
  usedOption?: string;
  useValue?: string | number;
  fieldConfig?: DynamicDropdownFieldConfig;
}
// tslint:disable:max-line-length
export const optionDependencies: Record<string, UsageOptionModel[]> = {
  ['Dialogue Action']: [
    {
      module: TabTypes.DIALOGUE,
      section: 'DIALOGUE.ACTION',
      usageType: UsageType.deleteRecord,
      field: 'action',
      table: dialogueActionsTable,
      choiceAsId: true,
    },
  ],
  ['Sockets Type']: [
    {
      module: TabTypes.ITEMS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.emptyValue,
      field: 'socket_type',
      table: itemTemplatesTable,
      choiceAsId: true,
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect1name`,
      options: [`(effect1type = 'Sockets' OR effect1type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect2name`,
      options: [`(effect2type = 'Sockets' OR effect2type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect3name`,
      options: [`(effect3type = 'Sockets' OR effect3type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect4name`,
      options: [`(effect4type = 'Sockets' OR effect4type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect5name`,
      options: [`(effect5type = 'Sockets' OR effect5type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect6name`,
      options: [`(effect6type = 'Sockets' OR effect6type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect7name`,
      options: [`(effect7type = 'Sockets' OR effect7type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect8name`,
      options: [`(effect8type = 'Sockets' OR effect8type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect9name`,
      options: [`(effect9type = 'Sockets' OR effect9type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect10name`,
      options: [`(effect10type = 'Sockets' OR effect10type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect11name`,
      options: [`(effect11type = 'Sockets' OR effect11type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect12name`,
      options: [`(effect12type = 'Sockets' OR effect12type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect13name`,
      options: [`(effect13type = 'Sockets' OR effect13type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect14name`,
      options: [`(effect14type = 'Sockets' OR effect14type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect15name`,
      options: [`(effect15type = 'Sockets' OR effect15type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect16name`,
      options: [`(effect16type = 'Sockets' OR effect16type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect17name`,
      options: [`(effect17type = 'Sockets' OR effect17type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect18name`,
      options: [`(effect18type = 'Sockets' OR effect18type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect19name`,
      options: [`(effect19type = 'Sockets' OR effect19type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect20name`,
      options: [`(effect20type = 'Sockets' OR effect20type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect21name`,
      options: [`(effect21type = 'Sockets' OR effect21type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect22name`,
      options: [`(effect22type = 'Sockets' OR effect22type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect23name`,
      options: [`(effect23type = 'Sockets' OR effect23type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect24name`,
      options: [`(effect24type = 'Sockets' OR effect24type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect25name`,
      options: [`(effect25type = 'Sockets' OR effect25type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect26name`,
      options: [`(effect26type = 'Sockets' OR effect26type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect27name`,
      options: [`(effect27type = 'Sockets' OR effect27type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect28name`,
      options: [`(effect28type = 'Sockets' OR effect28type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect29name`,
      options: [`(effect29type = 'Sockets' OR effect29type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect30name`,
      options: [`(effect30type = 'Sockets' OR effect30type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect31name`,
      options: [`(effect31type = 'Sockets' OR effect31type = 'SocketsEffect')`],
    },
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.EFFECTS',
      usageType: UsageType.clearFieldSet,
      table: itemTemplatesTable,
      choiceAsId: true,
      field: `effect32name`,
      options: [`(effect32type = 'Sockets' OR effect32type = 'SocketsEffect')`],
    },
  ],
  ['Requirement']: [
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.REQUIREMENTS',
      usageType: UsageType.deleteRecord,
      table: itemRequirementTable,
      field: `editor_option_type_id`,
      choiceAsId: false,
    },
    {
      module: TabTypes.DIALOGUE,
      section: 'DIALOGUE.REQUIREMENTS',
      usageType: UsageType.deleteRecord,
      table: dialogueActionsRequirementsTable,
      field: `editor_option_type_id`,
      choiceAsId: false,
    },
    {
      module: TabTypes.QUESTS,
      section: 'QUESTS.REQUIREMENTS',
      usageType: UsageType.deleteRecord,
      table: questRequirementTable,
      field: `editor_option_type_id`,
      choiceAsId: false,
    },
  ],
  ['Ammo Type']: [
    {
      module: TabTypes.ITEMS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.updateDefault,
      field: 'ammotype',
      table: itemTemplatesTable,
      choiceAsId: false,
    },
  ],
  ['Item Type']: [
    {
      module: TabTypes.ITEMS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.change,
      field: 'itemType',
      table: itemTemplatesTable,
      choiceAsId: true,
      fieldConfig: itemTypeFieldConfig,
    },
  ],
  ['Armor Type']: [
    {
      module: TabTypes.ITEMS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.change,
      field: 'subType',
      table: itemTemplatesTable,
      choiceAsId: true,
      options: [`itemType = 'Armor'`],
      fieldConfig: armorTypeFieldConfig,
    },
  ],
  ['Tool Type']: [
    {
      module: TabTypes.ITEMS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.change,
      field: 'subType',
      table: itemTemplatesTable,
      choiceAsId: true,
      options: [`itemType = 'Tool'`],
      fieldConfig: toolTypeFieldConfig,
    },
    {
      module: TabTypes.RESOURCE_NODE_PROFILE,
      section: 'RESOURCE_NODE_PROFILE.SUBS_PROFILE',
      usageType: UsageType.change,
      field: 'weaponReq',
      table: resourceNodeSubProfileTable,
      choiceAsId: true,
      fieldConfig: toolTypeFieldConfig,
    },
  ],
  ['Species']: [
    {
      module: TabTypes.MOBS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.change,
      field: 'species',
      table: mobTemplateTable,
      choiceAsId: true,
      fieldConfig: speciesFieldConfig,
    },
    {
      module: TabTypes.ABILITY,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.emptyValue,
      field: 'speciesTargetReq',
      table: abilitiesTable,
      choiceAsId: true,
    },
  ],
  ['Mob Type']: [
    {
      module: TabTypes.MOBS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.change,
      field: 'mobType',
      table: mobTemplateTable,
      choiceAsId: false,
      fieldConfig: mobTypeFieldConfig,
    },
  ],
  ['Weapon Type']: [
    {
      module: TabTypes.MOBS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.emptyValue,
      field: 'skinningWeaponReq',
      table: mobTemplateTable,
      choiceAsId: true,
    },
    {
      module: TabTypes.ITEMS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.change,
      field: 'subType',
      table: itemTemplatesTable,
      choiceAsId: true,
      options: [`itemType = 'Weapon'`],
      fieldConfig: weaponTypeFieldConfig,
    },
    {
      module: TabTypes.BUILD_OBJECT,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.emptyValue,
      field: 'weaponReq',
      table: buildObjectTable,
      choiceAsId: true,
    },
    {
      module: TabTypes.ABILITY,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      field: 'weaponRequired',
      table: abilitiesTable,
      choiceAsId: false,
    },
  ],
  ['Currency Group']: [
    {
      module: TabTypes.CURRENCIES,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.updateDefault,
      field: 'currencyGroup',
      table: currenciesTable,
      choiceAsId: false,
      defaultValue: '0',
    },
  ],
  ['Crafting Station']: [
    {
      module: TabTypes.CRAFTING_RECIPES,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.updateDefault,
      field: 'stationReq',
      table: craftingRecipesTable,
      choiceAsId: true,
      defaultValue: 'none',
    },
  ],
  ['Building Category']: [
    {
      module: TabTypes.BUILD_OBJECT,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.updateDefault,
      field: 'category',
      table: buildObjectTable,
      choiceAsId: false,
    },
  ],
  ['Claim Object Interaction Type']: [
    {
      module: TabTypes.BUILD_OBJECT,
      section: 'BUILD_OBJECT.STAGES',
      usageType: UsageType.change,
      field: 'interactionType',
      table: buildObjectStageTable,
      choiceAsId: true,
      fieldConfig: claimObjectInteractionTypeFieldConfig,
    },
  ],
  ['Class']: [
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.REQUIREMENTS',
      usageType: UsageType.deleteRecord,
      table: itemRequirementTable,
      field: `editor_option_choice_type_id`,
      options: [`editor_option_type_id = '${Requirements.CLASS}'`],
      choiceAsId: false,
    },
    {
      module: TabTypes.DIALOGUE,
      section: 'DIALOGUE.REQUIREMENTS',
      usageType: UsageType.deleteRecord,
      table: dialogueActionsRequirementsTable,
      field: `editor_option_choice_type_id`,
      options: [`editor_option_type_id = '${Requirements.CLASS}'`],
      choiceAsId: false,
    },
    {
      module: TabTypes.QUESTS,
      section: 'QUESTS.REQUIREMENTS',
      usageType: UsageType.deleteRecord,
      table: questRequirementTable,
      field: `editor_option_choice_type_id`,
      options: [`editor_option_type_id = '${Requirements.CLASS}'`],
      choiceAsId: false,
    },
    {
      module: TabTypes.SKILLS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.updateDefault,
      table: skillsTable,
      field: `aspect`,
      choiceAsId: false,
    },
    {
      module: TabTypes.SKILLS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.updateDefault,
      table: skillsTable,
      field: `oppositeAspect`,
      choiceAsId: false,
    },
    {
      module: TabTypes.EFFECTS_TRIGGERS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.updateDefault,
      table: effectsTriggersTable,
      field: `class`,
      choiceAsId: false,
    },
    {
      module: TabTypes.PLAYER_CHARACTER,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteRecord,
      table: characterTemplateTable,
      field: `aspect`,
      choiceAsId: false,
    },
    {
      module: TabTypes.EFFECTS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.change,
      table: effectsTable,
      field: `intValue1`,
      options: [`effectMainType = '${EffectType.ChangeClass}'`],
      choiceAsId: false,
      fieldConfig: classFieldConfig,
      label: 'EFFECTS.NEW_CLASS',
    },
  ],
  ['Race']: [
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.REQUIREMENTS',
      usageType: UsageType.deleteRecord,
      table: itemRequirementTable,
      field: `editor_option_choice_type_id`,
      options: [`editor_option_type_id = '${Requirements.RACE}'`],
      choiceAsId: false,
    },
    {
      module: TabTypes.DIALOGUE,
      section: 'DIALOGUE.REQUIREMENTS',
      usageType: UsageType.deleteRecord,
      table: dialogueActionsRequirementsTable,
      field: `editor_option_choice_type_id`,
      options: [`editor_option_type_id = '${Requirements.RACE}'`],
      choiceAsId: false,
    },
    {
      module: TabTypes.QUESTS,
      section: 'QUESTS.REQUIREMENTS',
      usageType: UsageType.deleteRecord,
      table: questRequirementTable,
      field: `editor_option_choice_type_id`,
      options: [`editor_option_type_id = '${Requirements.RACE}'`],
      choiceAsId: false,
    },
    {
      module: TabTypes.EFFECTS_TRIGGERS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.updateDefault,
      table: effectsTriggersTable,
      field: `race`,
      choiceAsId: false,
    },
    {
      module: TabTypes.PLAYER_CHARACTER,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteRecord,
      table: characterTemplateTable,
      field: `race`,
      choiceAsId: false,
    },
  ],
  ['Stat Functions']: [
    {
      module: TabTypes.STATS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.emptyValue,
      field: 'stat_function',
      table: statsTable,
      choiceAsId: true,
    },
    {
      module: TabTypes.THRESHOLDS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteRecord,
      field: 'stat_function',
      table: statThresholdTable,
      choiceAsId: true,
    },
  ],
  ['State']: [
    {
      module: TabTypes.STATS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.change,
      field: 'shiftReq1',
      table: statsTable,
      choiceAsId: true,
      fieldConfig: stateFieldConfig,
    },
    {
      module: TabTypes.STATS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.change,
      field: 'shiftReq2',
      table: statsTable,
      choiceAsId: true,
      fieldConfig: stateFieldConfig,
    },
    {
      module: TabTypes.STATS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.change,
      field: 'shiftReq3',
      table: statsTable,
      choiceAsId: true,
      fieldConfig: stateFieldConfig,
    },
    {
      module: TabTypes.EFFECTS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.change,
      table: effectsTable,
      field: `stringValue1`,
      options: [`effectMainType = '${EffectType.State}'`],
      label: 'EFFECTS.STATE',
      choiceAsId: true,
      fieldConfig: stateFieldConfig,
    },
  ],
  ['Stat Shift Action']: [
    {
      module: TabTypes.STATS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.change,
      field: 'onMaxHit',
      table: statsTable,
      choiceAsId: true,
      fieldConfig: statShiftActionFieldConfig,
    },
    {
      module: TabTypes.STATS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.change,
      field: 'onMinHit',
      table: statsTable,
      choiceAsId: true,
      fieldConfig: statShiftActionFieldConfig,
    },
  ],
  ['Ability Tags']: [
    {
      module: TabTypes.ABILITY,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.updateDefault,
      field: 'tag_disable',
      table: abilitiesTable,
      choiceAsId: false,
    },
    {
      module: TabTypes.ABILITY,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      field: 'tags',
      table: abilitiesTable,
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.EFFECTS_TRIGGERS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      field: 'tags',
      table: effectsTriggersTable,
      options: [`(event_type = '${eventType.dodge}' OR event_type = '${eventType.miss}' OR event_type = '${eventType.parry}')`],
      choiceAsId: false,
      multiple: true,
    },
  ],
  ['Effects Tags']: [
    {
      module: TabTypes.EFFECTS_TRIGGERS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      field: 'tags',
      table: effectsTriggersTable,
      options: [`event_type != '${eventType.dodge}' AND event_type != '${eventType.miss}' AND event_type != '${eventType.parry}'`],
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.EFFECTS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      table: effectsTable,
      field: `group_tags`,
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.EFFECTS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      table: effectsTable,
      field: `stringValue1`,
      options: [`effectMainType = '${EffectType.Shield}'`],
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.EFFECTS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      table: effectsTable,
      field: `stringValue2`,
      options: [`effectMainType = '${EffectType.Shield}'`],
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.EFFECTS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      table: effectsTable,
      field: `stringValue3`,
      options: [`effectMainType = '${EffectType.Shield}'`],
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.EFFECTS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      table: effectsTable,
      field: `stringValue4`,
      options: [`effectMainType = '${EffectType.Shield}'`],
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.EFFECTS,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      table: effectsTable,
      field: `stringValue2`,
      options: [`(effectMainType = '${EffectType.Dispel}' AND stringValue1 = 'By Tags')`],
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.MOB_BEHAVIOR_PROFILE,
      section: 'MOB_BEHAVIOR_PROFILE.BEHAVIOR_CONDITIONS',
      usageType: UsageType.deleteRecord,
      field: 'effect_tag_id',
      table: behaviorConditionsTable,
      choiceAsId: false
    },
    {
      module: TabTypes.MOB_BEHAVIOR_PROFILE,
      section: 'MOB_BEHAVIOR_PROFILE.MOB_ABILITY_CONDITIONS',
      usageType: UsageType.deleteRecord,
      field: 'effect_tag_id',
      table: mobAbilityConditionsTable,
      choiceAsId: false
    },
    {
      module: TabTypes.ABILITY,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      field: 'tags_on_caster',
      table: abilitiesTable,
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.ABILITY,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      field: 'tags_on_target',
      table: abilitiesTable,
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.ABILITY,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      field: 'tags_not_on_caster',
      table: abilitiesTable,
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.ABILITY,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      field: 'pulse_tags_on_caster',
      table: abilitiesTable,
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.ABILITY,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      field: 'pulse_tags_on_target',
      table: abilitiesTable,
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.ABILITY,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      field: 'pulse_tags_not_on_caster',
      table: abilitiesTable,
      choiceAsId: false,
      multiple: true,
    },
    {
      module: TabTypes.ABILITY,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.deleteInString,
      field: 'pulse_tags_not_on_target',
      table: abilitiesTable,
      choiceAsId: false,
      multiple: true,
    },
  ],
  ['Item Quality']: [
    {
      module: TabTypes.ITEMS,
      section: 'ITEMS.REQUIREMENTS',
      usageType: UsageType.change,
      table: itemTemplatesTable,
      field: `itemQuality`,
      choiceAsId: false,
      choiceIdAsI: true,
      fieldConfig: itemQualityFieldConfig,
    },
  ],
  ['Claim Object Category']: [
    {
      module: TabTypes.CLAIM_PROFILE,
      section: 'CLAIM_PROFILE.LIMITS',
      usageType: UsageType.deleteRecord,
      table: buildObjectLimitsTable,
      field: `object_category`,
      choiceAsId: false,
      choiceIdAsI: false,
      fieldConfig: buildObjectCategoryFieldConfig,
    },
    {
      module: TabTypes.BUILD_OBJECT,
      section: 'DEPENDENCIES.MAIN_SECTION',
      usageType: UsageType.updateDefault,
      table: buildObjectTable,
      field: `claim_object_category`,
      choiceAsId: false,
      defaultValue: '-1',
      fieldConfig: buildObjectCategoryFieldConfig,
    },
  ],
  ['Claim Type']: [
    {
      dbType: DataBaseType.admin,
      module: TabTypes.NONE,
      section: 'NONE',
      usageType: UsageType.updateDefault,
      defaultValue: '-1',
      table: claimTable,
      field: `claimType`,
      choiceAsId: false,
      fieldConfig: claimTypeFieldConfig,
    },
  ],
  ['Item Slot Type']: [
    {
      dbType: DataBaseType.world_content,
      module: TabTypes.SLOT,
      section: 'NONE',
      usageType: UsageType.deleteInString,
      table: slotsTable,
      field: `type`,
      choiceAsId: false,
      fieldConfig: itemSlotTypeFieldConfig,
      multiple: true,
    },
  ],
  ['Mob Tags']: [
    {
      dbType: DataBaseType.world_content,
      module: TabTypes.MOB_BEHAVIOR_PROFILE,
      section: 'MOB_BEHAVIOR_PROFILE.BEHAVIOR_CONDITIONS',
      usageType: UsageType.deleteRecord,
      table: behaviorConditionsTable,
      field: `effect_tag_id`,
      choiceAsId: false,
      fieldConfig: mobTagsFieldConfig,
    },
    {
      dbType: DataBaseType.world_content,
      module: TabTypes.MOBS,
      section: 'MOBS.TAGS',
      usageType: UsageType.deleteInString,
      table: mobTemplateTable,
      field: `tags`,
      choiceAsId: false,
      fieldConfig: mobTagsFieldConfig,
    },
  ],
};
